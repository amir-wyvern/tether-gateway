version: "3"

services:
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - my-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: <root_password>
      MYSQL_DATABASE: <database name>
      MYSQL_USER: <username>
      MYSQL_PASSWORD: <user_password>

    networks:
      - my-network
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  fastapi:
    build: .
    ports:
      - "80:80"
    depends_on:
      - redis
      - mysql
    networks:
      - my-network
    volumes:
      - logs:/app/logs
    environment:
      SQLALCHEMY_DATABASE_URL: mysql+pymysql://<username>:<password>@<hostname>/<database name>
      CACHE_URL: redis://<hostname>:<port>

  withdraw:
    build:
      context: .
      dockerfile: celery_withdraw/Dockerfile
    depends_on:
      - redis
      - mysql
    networks:
      - my-network
    volumes:
      - logs:/withdraw/logs
    environment:
      SQLALCHEMY_DATABASE_URL: mysql+pymysql://<username>:<password>@<hostname>/<database name>
      CACHE_URL: redis://<hostname>:<port>
      
  deposit:
    build:
      context: .
      dockerfile: celery_deposit/Dockerfile
    depends_on:
      - redis
      - mysql
    networks:
      - my-network
    volumes:
      - logs:/deposit/logs
    environment:
      SQLALCHEMY_DATABASE_URL: mysql+pymysql://<username>:<password>@<hostname>/<database name>
      CACHE_URL: redis://<hostname>:<port>
      
  transfer:
    build:
      context: .
      dockerfile: celery_transfer/Dockerfile
    depends_on:
      - redis
      - mysql
    networks:
      - my-network
    volumes:
      - logs:/transfer/logs
    environment:
      SQLALCHEMY_DATABASE_URL: mysql+pymysql://<username>:<password>@<hostname>/<database name>
      CACHE_URL: redis://<hostname>:<port>
      
networks:
  my-network:
    driver: bridge

volumes:
  mysql_data:

  logs:
